abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ cd F:\Git

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git init
Reinitialized existing Git repository in F:/Git/.git/

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   file1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Assignment on Git.txt


abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git add .

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git commit -m "Add New File Assignment on git.tx and Modify file1.txt"
[main 5f776d5] Add New File Assignment on git.tx and Modify file1.txt
 2 files changed, 6 insertions(+), 1 deletion(-)
 create mode 100644 Assignment on Git.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git show
commit 5f776d50127bf6cff847b9945742aa636f33e92e (HEAD -> main)
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Thu Jan 11 19:21:58 2024 +0530

    Add New File Assignment on git.tx and Modify file1.txt

diff --git a/Assignment on Git.txt b/Assignment on Git.txt
new file mode 100644
index 0000000..f145d53
--- /dev/null
+++ b/Assignment on Git.txt
@@ -0,0 +1,5 @@
+1.) Multiline Commit Message can be Done using -
+       git commit -m "1st Line Msg" -m "2nd Line Msg"
+       git commit -v
+
+2.)
\ No newline at end of file
diff --git a/file1.txt b/file1.txt
index e893370..6189a93 100644
--- a/file1.txt
+++ b/file1.txt
@@ -3,5 +3,5 @@ This is Josh Family..!!

 Welcome to the Coding World..!!

-
+File From Main Branch.
 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
\ No newline at end of file

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git log
commit 5f776d50127bf6cff847b9945742aa636f33e92e (HEAD -> main)
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Thu Jan 11 19:21:58 2024 +0530

    Add New File Assignment on git.tx and Modify file1.txt

commit b6f137f6b9c9c8c96fe0436d456e66b0210777c3
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Thu Jan 11 15:50:30 2024 +0530

    Add New File file10.txt and Modify file1.txt

commit b6765fc6c98e9abe706317bd7345d8b177245c9a (origin/main)
Author: abhishek-jain-1925 <jainabhishek1925@gmail.com>
Date:   Thu Jan 11 14:39:56 2024 +0530

    Add New File to Main Branch

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git reset --soft HEAD~1

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Assignment on Git.txt
        modified:   file1.txt


abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git commit -m "Add New File Assignment on git.tx and Modify file1.txt"
[main b23642a] Add New File Assignment on git.tx and Modify file1.txt
 2 files changed, 6 insertions(+), 1 deletion(-)
 create mode 100644 Assignment on Git.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ vi demo.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git add .
warning: in the working copy of 'demo.txt', LF will be replaced by CRLF the next time Git touches it

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git commit -m "Add New File demo.txt on Main Repo"
[main 62e6095] Add New File demo.txt on Main Repo
 1 file changed, 1 insertion(+)
 create mode 100644 demo.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git reset --hard HEAD~1
HEAD is now at b23642a Add New File Assignment on git.tx and Modify file1.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git diff branch2
diff --git a/Assignment on Git.txt b/Assignment on Git.txt
new file mode 100644
index 0000000..f145d53
--- /dev/null
+++ b/Assignment on Git.txt
@@ -0,0 +1,5 @@
+1.) Multiline Commit Message can be Done using -
+       git commit -m "1st Line Msg" -m "2nd Line Msg"
+       git commit -v
+
+2.)
\ No newline at end of file
diff --git a/file1.txt b/file1.txt
index 5d0b7ee..6189a93 100644
--- a/file1.txt
+++ b/file1.txt
@@ -1,4 +1,7 @@
 Hello World...!!
 This is Josh Family..!!

-Welcome to the Coding World..!!
\ No newline at end of file
+Welcome to the Coding World..!!
+
+File From Main Branch.
+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
\ No newline at end of file
diff --git a/file10.txt b/file10.txt
new file mode 100644
index 0000000..2a4192a
--- /dev/null
+++ b/file10.txt
@@ -0,0 +1,11 @@
+This is file10.txt on Branch1
+
+Colors
+
+Red
+White
+Green
+Black
+Yellow
+Pink
+Voilet
diff --git a/file3.txt b/file3.txt
deleted file mode 100644
index 42e6ec9..0000000
--- a/file3.txt
+++ /dev/null


abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git checkout branch1
Switched to branch 'branch1'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git status
On branch branch1
nothing to commit, working tree clean

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ vi demo.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git stash
No local changes to save

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git stash list

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git status
On branch branch1
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        demo.txt

nothing added to commit but untracked files present (use "git add" to track)

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git add .
warning: in the working copy of 'demo.txt', LF will be replaced by CRLF the next time Git touches it

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git commit
[branch1 348a58a] Add New File demo.txt # Please enter the commit message for your changes. Lines starting
 1 file changed, 1 insertion(+)
 create mode 100644 demo.txt

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git remote add origin https://github.com/Abhishek-Jain-1925/Practice.git
error: remote origin already exists.

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git push origin branch1
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 380 bytes | 380.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Abhishek-Jain-1925/Practice.git
   f83a896..348a58a  branch1 -> branch1

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git push origin branch2
Everything up-to-date

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git push origin main
To https://github.com/Abhishek-Jain-1925/Practice.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/Abhishek-Jain-1925/Practice.git'
hint: Updates were rejected because the remote contains work that you do not
hint: have locally. This is usually caused by another repository pushing to
hint: the same ref. If you want to integrate the remote changes, use
hint: 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ ld..!!
+
+File From Main Branch.
+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
\ No newline at end of file
diff --git a/file10.txt b/file10.txt
new file mode 100644
index 0000000..2a4192a
--- /dev/null
+++ b/file10.txt
@@ -0,0 +1,11 @@
+This is file10.txt on Branch1
+
+Colors
+
+Red
+White
+Green
+Black
+Yellow
+Pink
+Voilet
diff --git a/file3.txt b/file3.txt
deleted file mode 100644
index 42e6ec9..0000000
--- a/file3.txt
+++ /dev/null


abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (main)
$ git checkout branch1
Switched to branch 'branch1'

abhis@DESKTOP-MPRLD9G MINGW64 /f/Git (branch1)
$ git status
On branch branch1
